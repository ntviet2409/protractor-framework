import {SuiteNames} from '../helpers/suite-names';
import {StepLogger} from '../../../core/logger/step-logger';
import {PageHelper} from '../../component/html/page-helper';
import {HomePage} from '../../pom/pages/webapp/home-page/home.po';
import {CommonPageHelper} from '../../pom/pages/common-page/common-page.helper';
import {HomePageHelper} from '../../pom/pages/webapp/home-page/home-page.helper';
import {LoginPageHelper} from '../../pom/pages/webapp/login-page/login-page.helper';
import {HomePageConstants} from '../../pom/pages/webapp/home-page/home-page.constants';
import {WebCommonPageHelper} from '../../pom/pages/webapp/common/web-common-page.helper';
import {ChannelPageHelper} from '../../pom/pages/webapp/channel/channel-page.helper';
import {WebCommonPageConstants} from '../../pom/pages/webapp/common/web-common-page.constants';
import {ChannelPageConstants} from '../../pom/pages/webapp/channel/channel-page.constants';
import {AddEditChannelPage} from '../../pom/pages/webapp/channel/channel.po';

describe(SuiteNames.e2eTestSuite, () => {
    let stepLogger: StepLogger;
    const label = WebCommonPageConstants.channelName;
    const uniqueId = PageHelper.randomString(5);
    const channelName = `${uniqueId}${label.fiftyCharacters}`;

    beforeAll(async () => {
        stepLogger = new StepLogger();
        await WebCommonPageHelper.navigateToWebApp();
        await LoginPageHelper.verifyNavigation(stepLogger);
    });

    afterAll(async () => {
        await CommonPageHelper.genericLogout();
    });

    // Jira References - FIRSTRAIN-12106
    it('Account Channel Creation- max length channel name - [21504828]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Mar 2019 04:34:25 GMT

        stepLogger.caseId = 21504828;

        stepLogger.stepId(1);
        stepLogger.step('Login to QA environment');
        await WebCommonPageHelper.loginAsQaUser(stepLogger);
        stepLogger.verification('Verify home page should be displayed');
        await HomePageHelper.verifyHomePageDashboard(stepLogger);

        stepLogger.stepId(2);
        stepLogger.step('From LHS Menu, click on ADD button');
        await HomePageHelper.clickOnButtonFromLhsTray(
            HomePage.buttonName.add,
            HomePageConstants.buttonSelectors.add,
            stepLogger
        );
        stepLogger.verification('Add options for Standard Channels should be displayed');
        await HomePageHelper.verifyAddButtonMenuItems(stepLogger);

        stepLogger.stepId(3);
        stepLogger.step('Click on Accounts Option');
        await HomePageHelper.clickItem(
            HomePage.itemName.account,
            HomePageConstants.itemSelectors.account,
            stepLogger
        );
        stepLogger.verification('Verify set up your Channel page is opened');
        await HomePageHelper.verifySetUpChannelPageIsOpened(
            AddEditChannelPage.setUpChannelHeader.accounts,
            ChannelPageConstants.setUpChannelHeader.accounts,
            stepLogger
        );

        stepLogger.stepId(4);
        stepLogger.step('Click continue button');
        await HomePageHelper.clickContinueButton(stepLogger);
        stepLogger.verification('Verify create channel button is shown');
        await HomePageHelper.verifyCreateChannelButtonIsShown(stepLogger);

        stepLogger.stepId(5);
        stepLogger.step('Give Channel Name and provide a name higher than 50 characters');
        await HomePageHelper.inputChannelName(channelName, stepLogger);
        stepLogger.verification('The Channel Name field should accept only 50 characters');
        await ChannelPageHelper.verifyChannelNameLength(stepLogger);
    });
});
